/*
Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
*/

#include <iostream>
using namespace std;
class Euler
{
    public:
    unsigned long sum_fibonacci()
    {
        long x=1,y=2,p;
        unsigned long z=0;
        while(p<=4000000)
        {
            p=x+y;
            x=y;
            y=p;
            if(p%2==0)
            {
                z+=p;
            }
        }
        return z+2;
    }
};

int main()
{
    Euler e1;
    unsigned long p=e1.sum_fibonacci();
    cout <<p<<endl;
    return 0;
}